name: Lede R1 PLUS TLS

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/mingxiaoyu/lede
  REPO_BRANCH: master
  CONFIG_FILE: lede.config
  DIY_SH: diy.sh
  TZ: Asia/Shanghai
  RELEASE: true

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Check CPU
      id: checkcpu
      run: |      
        cpu_model=`cat /proc/cpuinfo  |grep 'model name' |gawk -F : '{print $2}' | uniq -c  | sed 's/^ \+[0-9]\+ //g'`
        echo "cpu model: $cpu_model "
        e5CPU="E5"
        if [[ $cpu_model =~ $e5CPU ]]
        then
            echo "::set-output name=status::cancel"
        fi
        
    - name: Cancelling
      if: steps.checkcpu.outputs.status == 'cancel'
      uses: andymckay/cancel-action@0.2
      
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004) tree
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
        sudo mkdir -p /upload
        sudo chown $USER:$GROUPS /upload
        
        cd /upload
        echo "UPLOAD=$PWD" >> $GITHUB_ENV
        
        echo "tag_name=$(date +%Y%m%d)" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")"  >> $GITHUB_ENV
        
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt 
        cd openwrt
        
    - name: Update & Install Feeds
      run: |
        cd openwrt
        export GIT_SSL_NO_VERIFY=1
        ./scripts/feeds update -a
        ./scripts/feeds install -a
      
    - name: Load Custom Configuration
      run: |
        [ -e files ] && mv files openwrt/files
        chmod +x $DIY_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SH        
    - name: Compile the firmware
      id: compile
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

        echo -e "$(nproc) thread compile"
        make -j$(nproc) V=s || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        
    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && env.RELEASE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
        

    - name: Generate release tag
      id: tag
      if: steps.organize.outputs.status == 'success' && env.RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::Lede-$(date "+%Y.%m.%d")"
        touch release.txt
        echo "::set-output name=status::success"
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
        delete_tag_pattern: Lede
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}

